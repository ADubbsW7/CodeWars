def fibs_fizz_buzz(n):
    fib = [1,1] # fibinacci sequences start with 1,1
    while len(fib) < n: # generate the fib sequence based on input
        fib.append(fib[-2] + fib[-1]) # add new item to end of list
    for i,num in enumerate(fib): # go through the list to check divisibility
        toAdd = "" # initilize a string that we will add to (so that we don't have to duplicate a check)
        if num % 3 == 0:
            toAdd += 'Fizz'
        if num % 5 == 0:
            toAdd += "Buzz"
        if len(toAdd)>0: # if toAdd isn't empty (num is divisible by 3 or 5 or both)
            fib[i] = toAdd # replace the number with the text
    return fib[0:n] # return a list of only the length that is required (used for n=1 edge case)
'''
The goal of this kata is two-fold:

1.) You must produce a fibonacci sequence in the form of an array, containing a number of items equal to the input provided.

2.) You must replace all numbers in the sequence divisible by 3 with Fizz, those divisible by 5 with Buzz, and those divisible by both 3 and 5 with FizzBuzz.

For the sake of this kata, you can assume all input will be a positive integer.

Use Cases
Return output must be in the form of an array, with the numbers as integers and the replaced numbers (fizzbuzz) as strings.

Examples
Input:

fibs_fizz_buzz(5)
Output:

[ 1, 1, 2, 'Fizz', 'Buzz' ]
'''