from collections import Counter 

def anagrams(word, words):
    baseCount = Counter(word) # Call the counter module on the base word to get a dictionary of all the letters and their occurence count
    output = [] # initialize an empty array to store the words that are anagrams of "word"
    for w in words: 
        if baseCount == Counter(w): # compare each words Counter dictionary with the base
            output.append(w)
    return output

'''
What is an anagram? Well, two words are anagrams of each other if they both contain the same letters. For example:

'abba' & 'baab' == true

'abba' & 'bbaa' == true

'abba' & 'abbba' == false

'abba' & 'abca' == false
Write a function that will find all the anagrams of a word from a list. You will be given two inputs a word and an array with words. You should return an array of all the anagrams or an empty array if there are none. For example:

anagrams('abba', ['aabb', 'abcd', 'bbaa', 'dada']) => ['aabb', 'bbaa']

anagrams('racer', ['crazer', 'carer', 'racar', 'caers', 'racer']) => ['carer', 'racer']

anagrams('laser', ['lazing', 'lazy',  'lacer']) => []
'''